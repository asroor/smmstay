{"version":3,"sources":["main.js"],"names":["loadLine","document","querySelectorAll","typingTxt","window","process","getElementById","addEventListener","getBoundingClientRect","top","blockPosition","forEach","scrollPosition","add","item","classList","typeWriter","text","callback","i","typing","length","charAt","innerHTML","setTimeout","speed","startTyping","items","Array","from","currentItemIndex","setAttribute","processNextItem","currentItem","getAttribute"],"mappings":"AACA,IAAMA,SAAWC,SAASC,iBAAiB,YAAY,EAAjDF,QAAWC,SAASC,eAAgB,SAAC,EAYzCC,WAXFC,OAAMC,iBAAmBC,SAAAA,WAClBC,SACUF,QAAAG,sBAAA,EAAAC,IACoBL,OAACI,YAAAA,KAE1BE,SAAaC,QAAGC,SAAAA,GACPD,EAAAA,UAAQE,IAAAC,QAAQ,CACjB,CAACC,CAIrB,CAAC,EAACd,SAAAC,iBAAA,SAAA,GACIC,MAAAA,GACN,SAASa,WAAKF,EAAAG,EAAAC,GACd,IAAAC,EAASH,EAYLI,CAXA,SAASA,IACAA,EAAAA,EAASC,QACNJ,EAAKI,WAAQJ,EAAAK,OAAAH,CAAA,EACZI,CAAAA,GACFC,WAAAJ,EAAAK,KAAA,GAIHP,EAAY,CAEpB,EACS,CACb,CACA,SAASQ,cACL,IAAMC,EAAQC,MAAUC,KAAC1B,SAAY,EACjC2B,EAAoB,EAYxBH,EAAMhB,QAAQ,SAAAG,GACNA,EAACiB,aAAa,YAAiBjB,EAACS,SAAY,EAC5CT,EAACS,UAAgB,EACvB,CAAA,EAdF,SAASS,IACDF,IACMG,EACOA,EAFbH,EAAmBH,EAAMN,SAEZY,GADPA,EAAoBH,EAAAA,IACDI,aAAa,WAAmB,GAAC,GAC1DlB,WAAWiB,EAAmBhB,EAAA,WAC1Ba,CAAkB,GAClBE,EAAmB,CACrB,CAAA,EAEV,EAMkB,CACtB,CACAN,YAAY","file":"main.min.js","sourcesContent":["\"use strict\";\nconst loadLine = document.querySelectorAll('.load-line');\nconst process = document.getElementById('process');\nwindow.addEventListener('scroll', () => {\n    if (process) {\n        const blockPosition = process.getBoundingClientRect().top;\n        const scrollPosition = window.innerHeight - 400; // 400px masofa\n        if (blockPosition < scrollPosition) {\n            loadLine.forEach(item => {\n                item.classList.add('active');\n            });\n        }\n    }\n});\nconst typingTxt = document.querySelectorAll('.typing');\nlet speed = 50;\nfunction typeWriter(item, text, callback) {\n    let i = 0;\n    function typing() {\n        if (i < text.length) {\n            item.innerHTML += text.charAt(i); // Har bir harfni qo'shib borish\n            i++;\n            setTimeout(typing, speed); // Har bir harfni yozish uchun qayta chaqiriladi\n        }\n        else {\n            callback(); // Yozib tugagandan so'ng, callbackni chaqiramiz\n        }\n    }\n    typing(); // Matn yozishni boshlash\n}\nfunction startTyping() {\n    const items = Array.from(typingTxt); // NodeListni arrayga o'giramiz\n    let currentItemIndex = 0;\n    function processNextItem() {\n        if (currentItemIndex < items.length) {\n            const currentItem = items[currentItemIndex];\n            const text = currentItem.getAttribute('data-text') || ''; // Matnni 'data-text' orqali olamiz\n            typeWriter(currentItem, text, () => {\n                currentItemIndex++;\n                processNextItem(); // Navbatdagi elementni yozish\n            });\n        }\n    }\n    // Har bir elementning oldindan berilgan matnini o'chirish\n    items.forEach(item => {\n        item.setAttribute('data-text', item.innerHTML); // Asl matnni 'data-text' sifatida saqlab qo'yamiz\n        item.innerHTML = ''; // Matnni tozalaymiz\n    });\n    processNextItem(); // Typing jarayonini boshlash\n}\nstartTyping();\n"]}